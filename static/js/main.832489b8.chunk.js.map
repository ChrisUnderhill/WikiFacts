{"version":3,"sources":["wiki-logo.svg","tip.png","WikiScraper.js","FunFact.js","Loading.js","ConfidenceInterval.js","Home.js","HistoryElement.js","Header.js","LoginPage.js","RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","endpointHtml","endpointSummary","findFact","page","month","choose","year","pickRandomDate","console","log","fetch","then","res","text","html","json","getSummary","parse","querySelectorAll","map","x","id","findLinks","s","extract","matches","replace","match","question","answer","title","choices","Math","floor","random","length","FunFact","props","state","lower","upper","output","fact","checkAnswer","bind","correct","this","saveAnswerToHistory","setState","htmlFor","type","value","onChange","event","target","className","disabled","onClick","nextProps","prevState","React","Component","Loading","src","wiki_logo","useStyles","makeStyles","root","width","marks","label","values","valuetext","valueLabelFormat","findIndex","mark","DiscreteSlider","classes","Typography","gutterBottom","Slider","indexOf","getAriaValueText","aria-labelledby","step","valueLabelDisplay","max","e","v","Home","confidence","to","HistoryElement","key","style","undefined","Header","AppBar","position","Toolbar","variant","Button","color","LoginPage","username","password","handleUserNameChange","handlePasswordChange","placeholder","alert","RegisterPage","cpassword","handleCPasswordChange","history","createBrowserHistory","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","App","loading","getPValue","promise","sentence","parseFloat","updateFact","reduce","a","b","score","n_trials","cumulativeBinomialProbability","ThemeProvider","exact","path","c","getScore","toFixed","tip","JSON","stringify","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.832489b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki-logo.0df50668.svg\";","module.exports = __webpack_public_path__ + \"static/media/tip.464fb1c0.png\";","import { parse } from 'node-html-parser';\r\n\r\nconst endpointHtml = \"https://en.wikipedia.org/api/rest_v1/page/html/\"\r\nconst endpointSummary = \"https://en.wikipedia.org/api/rest_v1/page/summary/\"\r\n\r\nfunction getPage(page){\r\n    console.log(endpointHtml + page)\r\n    return fetch(endpointHtml + page)\r\n        .then( (res) => res.text() )\r\n}\r\n\r\nfunction getSummary(page){\r\n    console.log(endpointSummary + page)\r\n    return fetch(endpointSummary + page)\r\n        .then( (res) => res.json() )\r\n}\r\n\r\nfunction findLinks(html){\r\n    const root = parse(html)\r\n    return root.querySelectorAll(\"h3\").map(x => x.id)\r\n}\r\n\r\nfunction findFact(){\r\n    return getPage(pickRandomDate())\r\n        .then( (html) => getSummary(choose(findLinks(html))))\r\n        .then( (json) => {\r\n            let s = json.extract;\r\n            if (!s){\r\n                return;\r\n            }\r\n            s = s.replace(/\\[.*\\]/, \"\");\r\n            let regex = /[0-9]+,?\\.?[0-9]*/g;\r\n            let matches = s.match(regex)\r\n            if (matches){\r\n                let m = choose(matches);\r\n                return {question: s, answer: m, title: json.title}\r\n            }\r\n        })\r\n}\r\n\r\nfunction choose(choices) {\r\n    let index = Math.floor(Math.random() * choices.length);\r\n    return choices[index];\r\n}\r\n\r\nfunction pickRandomDate(){\r\n    let month = choose([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"])\r\n    let year = choose([\"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\", \"2011\", \"2010\", \"2009\", \"2008\", \"2007\", \"2006\", \"2005\", \"2004\"])\r\n    return \"Wikipedia:Featured_article_candidates%2FFeatured_log%2F\" + month + \"_\" + year\r\n}\r\n\r\nexport {findFact}\r\n","import React from \"react\";\r\n\r\nclass FunFact extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {lower: 0, upper: 0, output: \"\", fact: props.fact}\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps.fact !== prevState.fact){\r\n            return {lower: 0, upper: 0, output: \"\", fact: nextProps.fact};\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    checkAnswer(){\r\n        let correct = this.state.lower <= this.props.answer && this.state.upper >= this.props.answer;\r\n        this.props.saveAnswerToHistory(this.state.lower, this.state.upper, correct)\r\n        if (correct){\r\n            console.log(\"Correct\")\r\n            this.setState({output: \"Correct! Answer was \" + this.props.answer })\r\n        }\r\n        else{\r\n            console.log(\"Wrong\")\r\n            this.setState({output: \"Wrong! Answer was \" + this.props.answer})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <p>\r\n                {this.props.fact}\r\n            </p>\r\n            <label htmlFor={\"lower\"}>Enter a lower bound: </label>\r\n            <input type={\"number\"} id={\"lower\"} value={this.state.lower} onChange={ (event) => this.setState({lower: event.target.value})}/>\r\n            <br />\r\n            <label htmlFor={\"upper\"}>Enter an upper bound: </label>\r\n            <input type={\"number\"} id={\"upper\"} value={this.state.upper} onChange={ (event) => this.setState({upper: event.target.value})}/>\r\n            <br />\r\n            <button className={\"our-button\"} disabled={this.state.output} onClick={this.checkAnswer}> Check </button>\r\n            <p>{this.state.output}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FunFact","import React from \"react\";\r\nimport wiki_logo from \"./wiki-logo.svg\"\r\n\r\nfunction Loading() {\r\n    return <img src={wiki_logo} className=\"App-logo\" />\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        \"text-align\": \"center\",\r\n    },\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: '50%',\r\n    },\r\n    {\r\n        value: 1,\r\n        label: '75%',\r\n    },\r\n    {\r\n        value: 2,\r\n        label: '90%',\r\n    },\r\n    {\r\n        value: 3,\r\n        label: '95%',\r\n    },\r\n];\r\n\r\nconst values = [50,75,90,95]\r\n\r\nfunction valuetext(value) {\r\n    return `${value}%`;\r\n}\r\n\r\nfunction valueLabelFormat(value) {\r\n    return marks.findIndex((mark) => mark.value === value) + 1;\r\n}\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"discrete-slider-confidence\" gutterBottom>\r\n                How confident are you?\r\n            </Typography>\r\n            <Slider\r\n                value={values.indexOf(props.value)}\r\n                valueLabelFormat={valueLabelFormat}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-confidence\"\r\n                step={null}\r\n                valueLabelDisplay=\"off\"\r\n                max={3}\r\n                marks={marks}\r\n                onChange={(e,v) => props.onChange(values[v])}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport ConfidenceInterval from \"./ConfidenceInterval\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"question-container\">\r\n            <h1>Welcome to Wiki Facts!</h1>\r\n            <p>It's the best ever!!!!!!  Research has shown that people are too confident in their estimations.  Link to some research plz.</p>\r\n            <ConfidenceInterval value={this.props.confidence} onChange={this.props.onChange}/>\r\n            <Link to={\"/play\"}><button className=\"our-button\">Let's play!</button></Link>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction HistoryElement(props){\r\n    return (<div className=\"history-container\" key={props.key}>\r\n        <h2 className=\"history-mark\">{(\r\n            props.correct ? <span style={{\"color\": \"green\"}}>&#10004;</span> :\r\n                props.correct === undefined ? <span style={{\"color\": \"grey\", \"font-weight\": \"bolder\"}}>&#9675;</span> :\r\n                    <span style={{\"color\":\"red\"}}>&#10008;</span>)}</h2>\r\n        <h3 className=\"history-text\">{props.question}</h3>\r\n    </div>)\r\n}\r\n\r\nexport default HistoryElement;","import React from \"react\"\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        \"margin-bottom\": \"20px\",\r\n    },\r\n});\r\n\r\n\r\nfunction Header(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h4\" className=\"title\"><Link to={\"/\"}>\r\n                        WikiFacts\r\n                    </Link></Typography>\r\n                    <Link to={\"/login\"}><Button color=\"inherit\">Login</Button></Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>)\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n        }\r\n\r\n        this.handleUserNameChange = this.handleUserNameChange.bind(this)\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n    }\r\n\r\n    handleUserNameChange(event) {\r\n        this.setState({username: event.target.value})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"login-container\">\r\n            <h2>Hi, please log in!</h2>\r\n            <br />\r\n            <label htmlFor={\"user\"}>Username: </label>\r\n            <input type={\"text\"} id={\"user\"} placeholder={\"Username\"} onChange={this.handleUserNameChange} />\r\n            <br />\r\n            <label htmlFor={\"pwd\"}>Password: </label>\r\n            <input type={\"password\"} id={\"pwd\"} placeholder={\"Password\"} onChange={this.handlePasswordChange}/>\r\n            <br />\r\n            <button className={\"our-button\"} onClick={() => alert(\"YOU ARE THE 1,000,000 VISITOR TO THIS PAGE\")}> Log In </button>\r\n            <br />\r\n            <p>Don't have an account yet? <Link to={\"/register\"}>Register here</Link> </p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            cpassword: \"\",\r\n        }\r\n\r\n        this.handleUserNameChange = this.handleUserNameChange.bind(this)\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleCPasswordChange = this.handleCPasswordChange.bind(this)\r\n    }\r\n\r\n    handleUserNameChange(event) {\r\n        this.setState({username: event.target.value})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    handleCPasswordChange(event) {\r\n        this.setState({cpassword: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"login-container\">\r\n            <h2>Hi, please register!</h2>\r\n            <br />\r\n            <label htmlFor={\"user\"}>Username: </label>\r\n            <input type={\"text\"} id={\"user\"} placeholder={\"Username\"} onChange={this.handleUserNameChange} />\r\n            <br />\r\n            <label htmlFor={\"pwd\"}>Password: </label>\r\n            <input type={\"password\"} id={\"pwd\"} placeholder={\"Password\"} onChange={this.handlePasswordChange}/>\r\n            <br />\r\n            <label htmlFor={\"cpwd\"}>Confirm Password: </label>\r\n            <input type={\"password\"} id={\"cpwd\"} placeholder={\"Password\"} onChange={this.handleCPasswordChange}/>\r\n            <br />\r\n            {this.state.password === this.state.cpassword || <p>Passwords do not match!</p>}\r\n            <button className={\"our-button\"} disabled={this.state.password !== this.state.cpassword} onClick={() => alert(\"YOU ARE THE 1,000,001 VISITOR TO THIS PAGE\")}> Register </button>\r\n            <br />\r\n            <p>Already have an account? <br/>\r\n                <Link to={\"/login\"}>Login here</Link> </p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\nimport './App.css';\r\nimport {findFact} from \"./WikiScraper\";\r\nimport FunFact from \"./FunFact\";\r\nimport Loading from \"./Loading\";\r\nimport Home from \"./Home\";\r\nimport HistoryElement from \"./HistoryElement\";\r\nimport Header from \"./Header\";\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport {Route, Router} from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport RegisterPage from \"./RegisterPage\";\r\nimport cumulativeBinomialProbability from \"binomial-probability\"\r\nimport tip from \"./tip.png\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: '#30B030',\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n        secondary: {\r\n            light: '#4AFFE7',\r\n            main: '#0044ff',\r\n            // dark: will be calculated from palette.secondary.main,\r\n            contrastText: '#282c34',\r\n        },\r\n        // Used by `getContrastText()` to maximize the contrast between\r\n        // the background and the text.\r\n        contrastThreshold: 3,\r\n        // Used by the functions below to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n    },\r\n});\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fact: \"Click \\\"Find me a fact\\\" to get started\",\r\n            title: \"Title\",\r\n            answer: undefined,\r\n            history: [],\r\n            loading: false,\r\n            confidence: 90,\r\n        }\r\n        this.saveAnswerToHistory = this.saveAnswerToHistory.bind(this);\r\n        this.getPValue = this.getPValue.bind(this);\r\n    }\r\n\r\n    updateFact(promise) {\r\n        promise.then((res) => {\r\n            if (res == undefined) {\r\n                this.updateFact(findFact())\r\n                return\r\n            }\r\n            let sentence = res.question\r\n            sentence = sentence.replace(res.answer, \"____\")\r\n            this.setState({\r\n                loading: false,\r\n                fact: sentence,\r\n                answer: parseFloat(res.answer.replace(\",\", \"\")),\r\n                title: res.title,\r\n            })\r\n        })\r\n    }\r\n\r\n    saveAnswerToHistory(lower, upper, correct){\r\n        this.setState({\r\n            history: [...this.state.history,\r\n                {question: this.state.title, answer: this.state.answer, lower, upper, correct}]\r\n        })\r\n    }\r\n\r\n    getScore(){\r\n        return this.state.history.reduce( (a,b) => a + b.correct, 0 )\r\n    }\r\n\r\n    getPValue(confidence, score, n_trials){\r\n        let expected = confidence * n_trials / 100;\r\n        if (expected < score) {\r\n            return cumulativeBinomialProbability(n_trials, score, confidence / 100);\r\n        } else {\r\n            return cumulativeBinomialProbability(n_trials, n_trials - score, 1- (confidence / 100));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme} >\r\n                <div>\r\n                    <Router history={history} >\r\n                        <Header/>\r\n                        <Route exact path={\"/\"}>\r\n                            <div className=\"App\">\r\n                                <Home confidence={this.state.confidence} onChange={c => this.setState({confidence: c})}/>\r\n                            </div>\r\n                        </Route>\r\n                        <Route exact path={\"/play\"}>\r\n                            <div className=\"App\">\r\n                                <div className=\"quiz\">\r\n                                    <div className=\"question-container\">\r\n                                        <button className={\"our-button\"}\r\n                                                disabled={this.state.loading}\r\n                                                onClick={() => {this.setState({loading: true}); this.updateFact(findFact())} } >\r\n                                            Find me a fact!\r\n                                        </button>\r\n                                        {this.state.loading? <Loading/> :\r\n                                            <FunFact\r\n                                                fact={this.state.fact}\r\n                                                answer={this.state.answer}\r\n                                                saveAnswerToHistory={this.saveAnswerToHistory}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"history\">\r\n                                    <h2>Confidence: {this.state.confidence}%</h2>\r\n                                    <h2 className={\"score\"}>Score: {this.getScore()}/{this.state.history.length}</h2>\r\n                                    <div className=\"p-container\">\r\n                                        <p className=\"p-text\"><em>p</em>-value:&nbsp;\r\n                                            {this.getPValue(this.state.confidence, this.getScore(), this.state.history.length).toFixed(3)}</p>\r\n                                        <img src={tip} className=\"hover-trigger\"/>\r\n                                        <div className=\"hover-tip\">\r\n                                            <p>A <em>p</em>-value tells you the proability of getting a score at least this extreme</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.history.map(x => HistoryElement({...x, key: x.question + JSON.stringify(x.correct)}))}\r\n                                </div>\r\n                            </div>\r\n                        </Route>\r\n                        <Route exact path={\"/login\"}>\r\n                            <LoginPage />\r\n                        </Route>\r\n                        <Route exact path={\"/register\"}>\r\n                            <RegisterPage />\r\n                        </Route>\r\n                    </Router>\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}