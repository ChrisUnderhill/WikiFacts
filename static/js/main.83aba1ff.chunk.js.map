{"version":3,"sources":["wiki-logo.svg","WikiScraper.js","FunFact.js","Loading.js","HistoryElement.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","endpointHtml","endpointSummary","findFact","page","month","choose","year","pickRandomDate","console","log","fetch","then","res","text","html","json","getSummary","parse","querySelectorAll","map","x","id","findLinks","s","extract","matches","replace","match","m","question","answer","parseInt","title","choices","Math","floor","random","length","FunFact","props","state","lower","upper","output","fact","checkAnswer","bind","correct","this","saveAnswerToHistory","setState","htmlFor","type","value","onChange","event","target","disabled","onClick","nextProps","prevState","React","Component","Loading","src","wiki_logo","className","HistoryElement","style","undefined","Header","AppBar","position","Toolbar","Typography","variant","Button","color","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","App","history","loading","promise","sentence","updateFact","ThemeProvider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.83aba1ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki-logo.0df50668.svg\";","import { parse } from 'node-html-parser';\r\n\r\nconst endpointHtml = \"https://en.wikipedia.org/api/rest_v1/page/html/\"\r\nconst endpointSummary = \"https://en.wikipedia.org/api/rest_v1/page/summary/\"\r\n\r\nfunction getPage(page){\r\n    console.log(endpointHtml + page)\r\n    return fetch(endpointHtml + page)\r\n        .then( (res) => res.text() )\r\n}\r\n\r\nfunction getSummary(page){\r\n    console.log(endpointSummary + page)\r\n    return fetch(endpointSummary + page)\r\n        .then( (res) => res.json() )\r\n}\r\n\r\nfunction findLinks(html){\r\n    const root = parse(html)\r\n    return root.querySelectorAll(\"h3\").map(x => x.id)\r\n}\r\n\r\nfunction findFact(){\r\n    return getPage(pickRandomDate())\r\n        .then( (html) => getSummary(choose(findLinks(html))))\r\n        .then( (json) => {\r\n            let s = json.extract;\r\n            s = s.replace(/\\[.*\\]/, \"\");\r\n            let regex = /[0-9]+,?[0-9]*/g;\r\n            let matches = s.match(regex)\r\n            if (matches){\r\n                let m = choose(matches);\r\n                return {question: s, answer: parseInt(m.replace(\",\", \"\")), title: json.title}\r\n            }\r\n        })\r\n}\r\n\r\nfunction choose(choices) {\r\n    let index = Math.floor(Math.random() * choices.length);\r\n    return choices[index];\r\n}\r\n\r\nfunction pickRandomDate(){\r\n    let month = choose([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"])\r\n    let year = choose([\"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\", \"2011\", \"2010\", \"2009\", \"2008\", \"2007\", \"2006\", \"2005\", \"2004\"])\r\n    return \"Wikipedia:Featured_article_candidates%2FFeatured_log%2F\" + month + \"_\" + year\r\n}\r\n\r\nexport {findFact}\r\n","import React from \"react\";\r\n\r\nclass FunFact extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {lower: 0, upper: 0, output: \"\", fact: props.fact}\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps.fact !== prevState.fact){\r\n            return {lower: 0, upper: 0, output: \"\", fact: nextProps.fact};\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    checkAnswer(){\r\n        let correct = this.state.lower <= this.props.answer && this.state.upper >= this.props.answer;\r\n        this.props.saveAnswerToHistory(this.state.lower, this.state.upper, correct)\r\n        if (correct){\r\n            console.log(\"Correct\")\r\n            this.setState({output: \"Correct! Answer was \" + this.props.answer })\r\n        }\r\n        else{\r\n            console.log(\"Wrong\")\r\n            this.setState({output: \"Wrong! Answer was \" + this.props.answer})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <p>\r\n                {this.props.fact}\r\n            </p>\r\n            <label htmlFor={\"lower\"}>Enter a lower bound: </label>\r\n            <input type={\"number\"} id={\"lower\"} value={this.state.lower} onChange={ (event) => this.setState({lower: event.target.value})}/>\r\n            <br />\r\n            <label htmlFor={\"upper\"}>Enter an upper bound: </label>\r\n            <input type={\"number\"} id={\"upper\"} value={this.state.upper} onChange={ (event) => this.setState({upper: event.target.value})}/>\r\n            <br />\r\n            <button disabled={this.state.output} onClick={this.checkAnswer}> Check </button>\r\n            <p>{this.state.output}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FunFact","import React from \"react\";\r\nimport wiki_logo from \"./wiki-logo.svg\"\r\n\r\nfunction Loading() {\r\n    return <img src={wiki_logo} className=\"App-logo\" />\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\n\r\nfunction HistoryElement(props){\r\n    return (<div className=\"history-container\">\r\n        <h2 className=\"history-mark\">{(\r\n            props.correct ? <span style={{\"color\": \"green\"}}>&#10004;</span> :\r\n                props.correct === undefined ? <span style={{\"color\": \"grey\", \"font-weight\": \"bolder\"}}>&#9675;</span> :\r\n                    <span style={{\"color\":\"red\"}}>&#10008;</span>)}</h2>\r\n        <h3 className=\"history-text\">{props.question}</h3>\r\n    </div>)\r\n}\r\n\r\nexport default HistoryElement;","import React from \"react\"\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nfunction Header(props) {\r\n    return (<AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" className=\"title\">\r\n                WikiFacts\r\n            </Typography>\r\n            <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n    </AppBar>)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport {findFact} from \"./WikiScraper\";\r\nimport FunFact from \"./FunFact\";\r\nimport Loading from \"./Loading\";\r\nimport HistoryElement from \"./HistoryElement\";\r\nimport Header from \"./Header\";\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: '#30B030',\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n        secondary: {\r\n            light: '#4AFFE7',\r\n            main: '#0044ff',\r\n            // dark: will be calculated from palette.secondary.main,\r\n            contrastText: '#282c34',\r\n        },\r\n        // Used by `getContrastText()` to maximize the contrast between\r\n        // the background and the text.\r\n        contrastThreshold: 3,\r\n        // Used by the functions below to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n    },\r\n});\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fact: \"Click \\\"Find me a fact\\\" to get started\",\r\n            title: \"Title\",\r\n            answer: undefined,\r\n            history: [],\r\n            loading: false\r\n        }\r\n        this.saveAnswerToHistory = this.saveAnswerToHistory.bind(this)\r\n    }\r\n\r\n    updateFact(promise){\r\n        promise.then( (res) => {\r\n            if (res == undefined){\r\n                this.updateFact(findFact())\r\n                return\r\n            }\r\n            let sentence = res.question\r\n            sentence = sentence.replace(res.answer, \"____\")\r\n            this.setState({\r\n                loading: false,\r\n                fact: sentence,\r\n                answer: res.answer,\r\n                title: res.title,\r\n            })\r\n        })\r\n    }\r\n\r\n    saveAnswerToHistory(lower, upper, correct){\r\n        this.setState({\r\n            history: [...this.state.history,\r\n                {question: this.state.title, answer: this.state.answer, lower, upper, correct}]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme} >\r\n            <div>\r\n                <Header/>\r\n            <div className=\"App\">\r\n                <div className=\"quiz\">\r\n                <button\r\n                    disabled={this.state.loading}\r\n                    onClick={() => {this.setState({loading: true}); this.updateFact(findFact())} } >\r\n                    Find me a fact!\r\n                </button>\r\n                {this.state.loading? <Loading/> :\r\n                <FunFact\r\n                    fact={this.state.fact}\r\n                    answer={this.state.answer}\r\n                    saveAnswerToHistory={this.saveAnswerToHistory}\r\n                />}\r\n                </div>\r\n                <div className=\"history\">\r\n                {this.state.history.map(HistoryElement)}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}